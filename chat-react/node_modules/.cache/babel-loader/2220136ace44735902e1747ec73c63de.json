{"ast":null,"code":"var _jsxFileName = \"/home/aswin/Desktop/Projects/chat-mern/chat-react/src/Components/ChatScreen/Message.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { ChatState } from '../../ChatProvideContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Message() {\n  _s();\n\n  const {\n    selectedChat,\n    user,\n    setSelectedChat,\n    setGroupButton,\n    groupButton\n  } = ChatState();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const typingHandler = e => {\n    setNewMessage(e.target.value);\n  };\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      setLoading(true);\n      const {\n        data\n      } = await axios.get(`/message/${selectedChat._id}`, config);\n      setMessages(data);\n      setLoading(false); //   socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      console.log('failed to load messages', error);\n    }\n  };\n\n  console.log(newMessage);\n\n  const sendMessage = async e => {\n    if (e.key === \"Enter\" && newMessage) {\n      //   socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`\n          }\n        };\n        setNewMessage(\"\");\n        const {\n          data\n        } = await axios.post('/message', {\n          content: newMessage,\n          chatId: selectedChat\n        }, config); // socket.emit(\"new message\", data);\n\n        setMessages([...messages, data]);\n      } catch (error) {\n        console.log('failed to send message', error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-col px-3 flex-1 h-3/4 overflow-scroll\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white w-fit  rounded-tr-full rounded-br-full rounded-tl-full py-2 px-5 my-10\",\n          children: \"message \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" float-right my-10 bg-cyan-500 w-fit  rounded-tr-full rounded-bl-full rounded-tl-full py-2 px-5\",\n          children: \"message \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-10 w-11/12   absolute bottom-10 mt-auto  text-right bg-slate-400\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"flex h-full\",\n          onKeyDown: sendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchMessages,\n            children: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: typingHandler,\n            className: \"w-full  fex flex-grow mx-3  rounded-2xl \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            type: \"submit\",\n            className: \"rounded-xl bg-teal-400 p-2 mx-2\",\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Message, \"8hgj0acfZaXUYNAwiPmvhT1/52k=\");\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/home/aswin/Desktop/Projects/chat-mern/chat-react/src/Components/ChatScreen/Message.js"],"names":["axios","React","useEffect","useState","ChatState","Message","selectedChat","user","setSelectedChat","setGroupButton","groupButton","messages","setMessages","newMessage","setNewMessage","loading","setLoading","typingHandler","e","target","value","fetchMessages","config","headers","Authorization","token","data","get","_id","error","console","log","sendMessage","key","post","content","chatId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\n\nimport { ChatState } from '../../ChatProvideContext';\n\nfunction Message() {\n  const { selectedChat,user ,setSelectedChat,setGroupButton,groupButton } = ChatState();\n  const [messages,setMessages]=useState([])\n  const [newMessage,setNewMessage]=useState('')\n  const [loading,setLoading]=useState(false)\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n}\n\nconst fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n    //   socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      console.log('failed to load messages',error);\n    }\n  };\n  console.log(newMessage);\n  const sendMessage = async (e) => {\n    if (e.key === \"Enter\" && newMessage) {\n    //   socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          '/message',\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        // socket.emit(\"new message\", data);\n    \n        setMessages([...messages, data]);\n      } catch (error) {\n        console.log('failed to send message',error);\n      }\n    }\n  };\n  return (\n    <div>\n        {loading ? <p>loading</p>:\n        <div>\n            <div className=\"flex-col px-3 flex-1 h-3/4 overflow-scroll\">\n                <div className=\"bg-white w-fit  rounded-tr-full rounded-br-full rounded-tl-full py-2 px-5 my-10\">message </div>\n                <div className=\" float-right my-10 bg-cyan-500 w-fit  rounded-tr-full rounded-bl-full rounded-tl-full py-2 px-5\">message </div>\n            </div>\n\n            <div className=\"px-10 w-11/12   absolute bottom-10 mt-auto  text-right bg-slate-400\">\n                <form className=\"flex h-full\" onKeyDown={sendMessage}>\n                    <button onClick={fetchMessages}>image</button>\n                    <input type='text' onChange={typingHandler}  className='w-full  fex flex-grow mx-3  rounded-2xl ' />\n                    <button onClick={sendMessage} type='submit' className='rounded-xl bg-teal-400 p-2 mx-2'>send</button>\n                </form>\n            </div>\n        </div>}\n    </div>);\n}\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}