{"ast":null,"code":"var _jsxFileName = \"/home/aswin/Desktop/Projects/chat-mern/chat-react/src/Components/SideBar/NewChat.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { ChatState } from '../../ChatProvideContext';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewChat() {\n  _s();\n\n  const [gpName, setGpName] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [selUsers, setSelUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    user,\n    chats,\n    setChats,\n    modal,\n    setModal\n  } = ChatState();\n\n  const handleSearch = async query => {\n    setSearch(query);\n\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/user?search=${search}`, config); //   console.log(data);\n\n      setLoading(false);\n      setSearchResults(data);\n    } catch (error) {}\n  };\n\n  const handleGroup = userToAdd => {\n    if (selUsers.includes(userToAdd)) {\n      return;\n    }\n\n    setSelUsers([...selUsers, userToAdd]);\n    console.log(selUsers);\n  };\n\n  const handleDelete = delUser => {\n    setSelUsers(selUsers.filter(sel => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!gpName || !selUsers) {\n      console.log('fill all the fields');\n      return null;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post('/chat/group', {\n        name: gpName,\n        users: JSON.stringify(selUsers.map(u => u._id))\n      }, config);\n      console.log(data);\n      setChats([data, ...chats]); //   onClose();\n\n      console.log('new gp created');\n    } catch (error) {\n      console.log(error);\n      console.log('failed to create gp');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"absolute\",\n      open: modal,\n      onClose: () => setModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ddd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"my-4 grid gap-3 text-center bg-slate-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"chatname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: gpName,\n            onChange: e => setGpName(e.target.value),\n            className: \"bg-yellow-500 p-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: search,\n            onChange: e => handleSearch(e.target.value),\n            className: \"bg-yellow-500 p-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex bg-green-500 h-auto w-full p-4\",\n          children: selUsers.map(u => /*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => handleDelete(u),\n            className: \" mx-4\",\n            children: u.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), loading ? null : searchResults.slice(0, 3).map(u => /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleGroup(u),\n          children: u.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewChat, \"QDWCeYokUjMlgWfildw6PRABjPo=\");\n\n_c = NewChat;\nexport default NewChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewChat\");","map":{"version":3,"sources":["/home/aswin/Desktop/Projects/chat-mern/chat-react/src/Components/SideBar/NewChat.js"],"names":["axios","React","useState","ChatState","Modal","NewChat","gpName","setGpName","search","setSearch","searchResults","setSearchResults","selUsers","setSelUsers","loading","setLoading","user","chats","setChats","modal","setModal","handleSearch","query","config","headers","Authorization","token","data","get","error","handleGroup","userToAdd","includes","console","log","handleDelete","delUser","filter","sel","_id","handleSubmit","e","preventDefault","post","name","users","JSON","stringify","map","u","target","value","email","slice"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useState } from 'react'\nimport { ChatState } from '../../ChatProvideContext'\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\n\nfunction NewChat() {\n    const [gpName, setGpName] = useState(\"\")\n    const [search, setSearch] = useState(\"\")\n    const [searchResults, setSearchResults] = useState([])\n    const [selUsers, setSelUsers] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    const { user, chats, setChats,modal,setModal } = ChatState();\n\n    const handleSearch = async (query) => {\n        setSearch(query);\n        if (!query) {\n          return;\n        }\n    \n        try {\n          setLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.get(`/user?search=${search}`, config);\n        //   console.log(data);\n          setLoading(false);\n          setSearchResults(data);\n        } catch (error) {\n          \n        }\n      }\n\n      const handleGroup = (userToAdd) => {\n        if (selUsers.includes(userToAdd)) {\n          \n          return;\n        }\n    \n        setSelUsers([...selUsers, userToAdd]);\n        console.log(selUsers);\n      };\n      const handleDelete = (delUser) => {\n        setSelUsers(selUsers.filter((sel) => sel._id !== delUser._id));\n      };\n\n      const handleSubmit = async (e) => {\n          e.preventDefault();\n        if (!gpName || !selUsers) {\n          console.log('fill all the fields');\n          return null;\n        }\n    \n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.post(\n            '/chat/group',{\n              name: gpName,\n              users: JSON.stringify(selUsers.map((u) => u._id)),\n            },config\n          );\n          console.log(data);\n          setChats([data, ...chats]);\n        //   onClose();\n          console.log('new gp created');\n        } catch (error) {\n            console.log(error);\n          console.log('failed to create gp');\n        }\n      };\n\n    return (\n        <div >\n          <Modal className=\"absolute\" open={modal} onClose={()=>setModal(false)}>\n                <h1>ddd</h1>\n          \n            <form className='my-4 grid gap-3 text-center bg-slate-700'>\n                <div>\n                    <label>chatname</label>\n                    <input type=\"text\" value={gpName} onChange={(e)=>setGpName(e.target.value)} className='bg-yellow-500 p-2'/>\n                </div>\n                <div>\n                    <label>users</label>\n                    <input type=\"text\" value={search} onChange={(e) => handleSearch(e.target.value)} className='bg-yellow-500 p-2'/>\n                </div>\n                <div className='flex bg-green-500 h-auto w-full p-4'>\n\n                {selUsers.map(u=>(\n                    <h3 onClick={()=>handleDelete(u)} className=' mx-4'>{u.email}</h3>\n                ))}\n                </div>\n                {loading?null:(\n                    searchResults.slice(0,3).map(u=>\n                        <p onClick={() => handleGroup(u)}>{u.email}</p>\n                        )\n                )}\n\n                <button onClick={handleSubmit}>button</button>\n                \n            </form>\n            </Modal>\n            \n        </div>\n    )\n}\n\nexport default NewChat\n"]},"metadata":{},"sourceType":"module"}