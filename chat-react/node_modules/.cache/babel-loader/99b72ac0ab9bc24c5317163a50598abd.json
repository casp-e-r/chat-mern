{"ast":null,"code":"var _jsxFileName = \"/home/aswin/Desktop/Projects/chat-mern/chat-react/src/Components/ChatScreen/UpdateGroup.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { ChatState } from '../../ChatProvideContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateGroup() {\n  _s();\n\n  const [groupChatName, setGroupChatName] = useState();\n  const [renameloading, setRenameLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    fetching,\n    setFetching,\n    setGroupButton\n  } = ChatState();\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`/chat/rename`, {\n        chatId: selectedChat._id,\n        chatName: groupChatName\n      }, config);\n      console.log(data._id); // setSelectedChat(\"\");\n\n      setSelectedChat(data);\n      setFetching(!fetching);\n      setRenameLoading(false);\n    } catch (error) {\n      console.log('error occured');\n      setRenameLoading(false);\n    }\n\n    setGroupChatName(\"\");\n  };\n\n  const handleSearch = async query => {\n    setSearch(query);\n\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      console.log('error occured');\n      setLoading(false);\n    }\n  };\n\n  const handleAddUser = async user1 => {\n    if (selectedChat.users.find(u => u._id === user1._id)) {\n      console.log('user already in ');\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      console.log('admin can only add');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`/chat/groupadd`, {\n        chatId: selectedChat._id,\n        userId: user1._id\n      }, config);\n      setSelectedChat(data);\n      setFetching(!fetching);\n      setLoading(false);\n    } catch (error) {\n      console.log('error occured');\n      setLoading(false);\n    }\n\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async user1 => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      console.log('only admins can remove');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`/chat/groupremove`, {\n        chatId: selectedChat._id,\n        userId: user1._id\n      }, config);\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetching(!fetching); //   fetchMessages();\n\n      setLoading(false);\n    } catch (error) {\n      console.log('error occured');\n      setLoading(false);\n    }\n\n    setGroupChatName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"z-50 bg-indigo-400 lg:p-10   h-full bottom-0 right-0   absolute \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-2 w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGroupButton(false),\n        children: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Gp Name\",\n            value: groupChatName,\n            onChange: e => setGroupChatName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRename,\n            children: \"change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"add users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-1  bg-slate-100 \",\n        children: selectedChat.users.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mx-1\",\n            children: u.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), !(user.email === u.email) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemove(u),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateGroup, \"0PT+tSMjmTPmyJi/L0WN49fZl9E=\");\n\n_c = UpdateGroup;\nexport default UpdateGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateGroup\");","map":{"version":3,"sources":["/home/aswin/Desktop/Projects/chat-mern/chat-react/src/Components/ChatScreen/UpdateGroup.js"],"names":["axios","React","useState","ChatState","UpdateGroup","groupChatName","setGroupChatName","renameloading","setRenameLoading","search","setSearch","searchResult","setSearchResult","loading","setLoading","selectedChat","setSelectedChat","user","fetching","setFetching","setGroupButton","handleRename","config","headers","Authorization","token","data","put","chatId","_id","chatName","console","log","error","handleSearch","query","get","handleAddUser","user1","users","find","u","groupAdmin","userId","handleRemove","e","target","value","map","email"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react'\nimport { ChatState } from '../../ChatProvideContext';\n\nfunction UpdateGroup() {\n    const [groupChatName, setGroupChatName] = useState();\n    const [renameloading, setRenameLoading] = useState(false);\n    const [search, setSearch] = useState(\"\");\n    const [searchResult, setSearchResult] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const { selectedChat, setSelectedChat, user,fetching,setFetching,setGroupButton } = ChatState();\n    const handleRename = async () => {\n        if (!groupChatName) return;\n    \n        try {\n          setRenameLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.put(\n            `/chat/rename`,\n            {\n              chatId: selectedChat._id,\n              chatName: groupChatName,\n            },\n            config\n          );\n    \n          console.log(data._id);\n          // setSelectedChat(\"\");\n          setSelectedChat(data);\n          setFetching(!fetching);\n          setRenameLoading(false);\n        } catch (error) {\n          console.log('error occured');\n          setRenameLoading(false);\n        }\n        setGroupChatName(\"\");\n      };\n\n      const handleSearch = async (query) => {\n        setSearch(query);\n        if (!query) {\n          return;\n        }\n        try {\n          setLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.get(`/api/user?search=${search}`, config);\n          console.log(data);\n          setLoading(false);\n          setSearchResult(data);\n        } catch (error) {\n          console.log('error occured');\n          setLoading(false);\n        }\n      }\n      const handleAddUser = async (user1) => {\n        if (selectedChat.users.find((u) => u._id === user1._id)) {\n          console.log('user already in ');\n          return;\n        }\n        if (selectedChat.groupAdmin._id !== user._id) {\n          console.log('admin can only add');\n          return;\n        }\n    \n        try {\n          setLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.put(\n            `/chat/groupadd`,\n            {\n              chatId: selectedChat._id,\n              userId: user1._id,\n            },\n            config\n          );\n    \n          setSelectedChat(data);\n          setFetching(!fetching);\n          setLoading(false);\n        } catch (error) {\n         console.log('error occured');\n          setLoading(false);\n        }\n        setGroupChatName(\"\");\n      };\n\n      const handleRemove = async (user1) => {\n        if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n          console.log('only admins can remove');\n          return;\n        }\n    \n        try {\n          setLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.put(\n            `/chat/groupremove`,\n            {\n              chatId: selectedChat._id,\n              userId: user1._id,\n            },\n            config\n          );\n    \n          user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n          setFetching(!fetching);\n        //   fetchMessages();\n          setLoading(false);\n        } catch (error) {\n          console.log('error occured');\n          setLoading(false);\n        }\n        setGroupChatName(\"\");\n      }\n      \n    return (\n        <div className=\"z-50 bg-indigo-400 lg:p-10   h-full bottom-0 right-0   absolute \">\n            <div className=\"grid gap-2 w-full\">\n                <button onClick={() =>setGroupButton(false)}>button</button>\n                <div className=\"w-full\">\n                    \n                    <div className=\"flex flex-row\">\n                    <input type=\"text\" placeholder=\"Gp Name\"value={groupChatName}\n                    onChange={(e) => setGroupChatName(e.target.value)} />\n                    <button onClick={handleRename}>change</button>\n                    </div>\n                </div>\n                <div>\n                    <input type=\"text\" placeholder=\"add users\"/>                    \n                </div> \n\n                <div className=\"m-1  bg-slate-100 \">\n                    {selectedChat.users.map(u=>(\n                        <div className=\"flex flex-row\">\n                            <p className=\"mx-1\">{u.email}</p>\n                            {!(user.email===u.email) &&\n                            <button onClick={()=>handleRemove(u)}>X</button>}\n                        </div>\n                    ))}\n\n                </div>\n                <div>\n                    <button>remove</button>\n                </div>\n            </div>\n        \n        </div>\n\n    )\n}\n\nexport default UpdateGroup\n"]},"metadata":{},"sourceType":"module"}