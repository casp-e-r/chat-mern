{"ast":null,"code":"var _jsxFileName = \"/home/aswin/Desktop/Projects/chat-mern/chat-react/src/ChatProvideContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\n\nconst ChatProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [fetching, setFetching] = useState(false);\n  const [groupButton, setGroupButton] = useState(false);\n  const [searchButton, setSearchButton] = useState(false);\n  const [modal, setModal] = useState(false);\n  const Navigate = useNavigate();\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo); // if (!userInfo) Navigate('/')\n    // if (!userInfo) Navigate.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [Navigate, user]);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      selectedChat,\n      setSelectedChat,\n      user,\n      setUser,\n      notification,\n      setNotification,\n      chats,\n      setChats,\n      fetching,\n      setFetching,\n      groupButton,\n      setGroupButton,\n      searchButton,\n      setSearchButton,\n      modal,\n      setModal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatProvider, \"ljQw94RtyRG+JepVLoUZA5rgeyI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ChatProvider;\nexport const ChatState = () => {\n  _s2();\n\n  return useContext(ChatContext);\n};\n\n_s2(ChatState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = ChatState;\nexport default ChatProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatProvider\");\n$RefreshReg$(_c2, \"ChatState\");","map":{"version":3,"sources":["/home/aswin/Desktop/Projects/chat-mern/chat-react/src/ChatProvideContext.js"],"names":["React","createContext","useContext","useEffect","useState","useNavigate","ChatContext","ChatProvider","children","selectedChat","setSelectedChat","user","setUser","notification","setNotification","chats","setChats","fetching","setFetching","groupButton","setGroupButton","searchButton","setSearchButton","modal","setModal","Navigate","userInfo","JSON","parse","localStorage","getItem","ChatState"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;;AAEA,MAAMM,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACrC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,EAAhD;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,KAAD,CAAlC;AAGA,QAAMqB,QAAQ,GAAGpB,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB;AACAlB,IAAAA,OAAO,CAACc,QAAD,CAAP,CAFc,CAKd;AAEA;AACA;AACD,GATQ,EASN,CAACD,QAAD,EAAUd,IAAV,CATM,CAAT;AAWA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,YADK;AAELC,MAAAA,eAFK;AAGLC,MAAAA,IAHK;AAILC,MAAAA,OAJK;AAKLC,MAAAA,YALK;AAMLC,MAAAA,eANK;AAOLC,MAAAA,KAPK;AAQLC,MAAAA,QARK;AASLC,MAAAA,QATK;AAULC,MAAAA,WAVK;AAWLC,MAAAA,WAXK;AAYLC,MAAAA,cAZK;AAYUC,MAAAA,YAZV;AAYwBC,MAAAA,eAZxB;AAYwCC,MAAAA,KAZxC;AAY+CC,MAAAA;AAZ/C,KADT;AAAA,cAgBGhB;AAhBH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA5CD;;GAAMD,Y;UAWaF,W;;;KAXbE,Y;AA8CN,OAAO,MAAMwB,SAAS,GAAG,MAAM;AAAA;;AAC7B,SAAO7B,UAAU,CAACI,WAAD,CAAjB;AACD,CAFM;;IAAMyB,S;;MAAAA,S;AAIb,eAAexB,YAAf","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [fetching, setFetching] = useState(false)\n  const [groupButton, setGroupButton] = useState(false)\n  const [searchButton, setSearchButton] = useState(false)\n  const [modal, setModal] = useState(false)\n  \n\n  const Navigate = useNavigate();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    \n    // if (!userInfo) Navigate('/')\n\n    // if (!userInfo) Navigate.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [Navigate,user]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n        fetching,\n        setFetching,\n        groupButton,\n        setGroupButton,searchButton, setSearchButton,modal, setModal\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;"]},"metadata":{},"sourceType":"module"}