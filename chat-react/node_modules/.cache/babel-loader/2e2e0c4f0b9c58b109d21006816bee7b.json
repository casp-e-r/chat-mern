{"ast":null,"code":"var _jsxFileName = \"/home/aswin/Desktop/Projects/chat-mern/chat-react/src/Components/ChatScreen/Chat.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Message from './Message';\nimport { ChatState } from '../../ChatProvideContext';\nimport UpdateGroup from './UpdateGroup';\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:9000\";\nvar socket, selectedChatCompare;\n\nfunction Chat() {\n  _s();\n\n  const {\n    selectedChat,\n    user,\n    setNotification,\n    notification,\n    setSelectedChat,\n    setGroupButton,\n    groupButton,\n    fetching,\n    setFetching\n  } = ChatState();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const ref = useRef();\n\n  const scrollToBottom = () => {\n    var _ref$current;\n\n    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const scrollToEnd = () => {\n    var chatList = document.getElementById(\"chatList\");\n    chatList.scrollTop = chatList.offsetHeight;\n  };\n\n  useEffect(() => {\n    scrollToEnd();\n  }, []);\n  useEffect(() => {\n    scrollToBottom(); // scrollToEnd();\n  }, [messages, socketConnected]);\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      setLoading(true);\n      const {\n        data\n      } = await axios.get(`/message/${selectedChat._id}`, config);\n      setMessages(data);\n      setLoading(false);\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      console.log('failed to load messages', error);\n    }\n  }; //   console.log(messages);\n\n\n  const typingHandler = e => {\n    setNewMessage(e.target.value);\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 2000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    socket.emit(\"stop typing\", selectedChat._id);\n    console.log(newMessage);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      setNewMessage(\"\");\n      const {\n        data\n      } = await axios.post('/message', {\n        content: newMessage,\n        chatId: selectedChat\n      }, config);\n      socket.emit(\"new message\", data);\n      setMessages([...messages, data]);\n    } catch (error) {\n      console.log('failed to send message', error);\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false)); // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    fetchMessages();\n    selectedChatCompare = selectedChat;\n  }, [selectedChat]);\n  useEffect(() => {\n    socket.on(\"message recieved\", newMessageRecieved => {\n      console.log(newMessageRecieved);\n\n      if (!selectedChatCompare || // if chat is not selected or doesn't match current chat\n      selectedChatCompare._id !== newMessageRecieved.chat._id) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetching(!fetching);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `  sm:p-5 md:p-7 lg:p-10 h-screen overflow-x-hidden z-30 md:flex-grow w-full max-w-screen-2xl  md:flex ${selectedChat ? \"flex\" : \"none\"} `,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sm:rounded-3xl w-full z-40 p-3 relative flex flex-col bg-emerald-100 bg-opacity-90 h-full\",\n      children: [/*#__PURE__*/_jsxDEV(UpdateGroup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" rounded-3xl  px-10 py-5 bg-white flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: selectedChat.chatName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setGroupButton(true),\n            children: \"hhh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-col px-3 flex-1 overflow-x-scroll align-text-bottom \",\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatList\",\n        className: \"flex flex-col px-3 my-1 flex-1 overflow-x-scroll align-text-bottom \",\n        children: [messages === null || messages === void 0 ? void 0 : messages.map((m, i) => /*#__PURE__*/_jsxDEV(Message, {\n          message: m\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 20\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          ref: ref,\n          className: \"relative bottom-0\",\n          children: \"k\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this), isTyping && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"nnnn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-10 w-11/12 mt-2  bottom-10 mt-auto  text-right bg-slate-400\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendMessage,\n          className: \"flex h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchMessages,\n            children: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: typingHandler,\n            className: \"w-full  fex flex-grow mx-3  rounded-2xl \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"rounded-xl bg-teal-400 p-2 mx-2\",\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"D4k2Sd4sai233LaIdY8UpxkXqP4=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/aswin/Desktop/Projects/chat-mern/chat-react/src/Components/ChatScreen/Chat.js"],"names":["axios","React","useEffect","useRef","useState","Message","ChatState","UpdateGroup","io","ENDPOINT","socket","selectedChatCompare","Chat","selectedChat","user","setNotification","notification","setSelectedChat","setGroupButton","groupButton","fetching","setFetching","messages","setMessages","newMessage","setNewMessage","loading","setLoading","socketConnected","setSocketConnected","typing","setTyping","isTyping","setIsTyping","ref","scrollToBottom","current","scrollIntoView","behavior","scrollToEnd","chatList","document","getElementById","scrollTop","offsetHeight","fetchMessages","config","headers","Authorization","token","data","get","_id","emit","error","console","log","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","sendMessage","preventDefault","post","content","chatId","on","newMessageRecieved","chat","includes","chatName","map","m","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,QAAQ,GAAC,uBAAf;AACA,IAAIC,MAAJ,EAAWC,mBAAX;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM;AAAEC,IAAAA,YAAF;AAAeC,IAAAA,IAAf;AAAoBC,IAAAA,eAApB;AAAoCC,IAAAA,YAApC;AACJC,IAAAA,eADI;AACYC,IAAAA,cADZ;AAC2BC,IAAAA,WAD3B;AACwCC,IAAAA,QADxC;AACiDC,IAAAA;AADjD,MACgEf,SAAS,EAD/E;AAEA,QAAM,CAACgB,QAAD,EAAUC,WAAV,IAAuBnB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACoB,UAAD,EAAYC,aAAZ,IAA2BrB,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACsB,OAAD,EAASC,UAAT,IAAqBvB,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACwB,eAAD,EAAkBC,kBAAlB,IAAwCzB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,KAAD,CAAxC;AAGA,QAAM8B,GAAG,GAAG/B,MAAM,EAAlB;;AACA,QAAMgC,cAAc,GAAG,MAAM;AAAA;;AACzB,oBAAAD,GAAG,CAACE,OAAJ,8DAAaC,cAAb,CAA4B;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAA5B;AAED,GAHH;;AAIA,QAAMC,WAAW,GAAC,MAAI;AAClB,QAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAf;AACAF,IAAAA,QAAQ,CAACG,SAAT,GAAqBH,QAAQ,CAACI,YAA9B;AACD,GAHH;;AAKA1C,EAAAA,SAAS,CAAC,MAAM;AACdqC,IAAAA,WAAW;AACZ,GAFQ,EAEP,EAFO,CAAT;AAIArC,EAAAA,SAAS,CAAC,MAAM;AACZiC,IAAAA,cAAc,GADF,CAEZ;AAEH,GAJQ,EAIP,CAACb,QAAD,EAAUM,eAAV,CAJO,CAAT;;AAKA,QAAMiB,aAAa,GAAG,YAAY;AAC9B,QAAI,CAAChC,YAAL,EAAmB;;AAEnB,QAAI;AACF,YAAMiC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASlC,IAAI,CAACmC,KAAM;AAD7B;AADI,OAAf;AAMAtB,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,YAAM;AAAEuB,QAAAA;AAAF,UAAW,MAAMlD,KAAK,CAACmD,GAAN,CACpB,YAAWtC,YAAY,CAACuC,GAAI,EADR,EAErBN,MAFqB,CAAvB;AAIAvB,MAAAA,WAAW,CAAC2B,IAAD,CAAX;AACAvB,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEAjB,MAAAA,MAAM,CAAC2C,IAAP,CAAY,WAAZ,EAAyBxC,YAAY,CAACuC,GAAtC;AACD,KAjBD,CAiBE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCF,KAAtC;AACD;AACF,GAvBH,CA9BY,CAsDZ;;;AACA,QAAMG,aAAa,GAAIC,CAAD,IAAO;AACzBjC,IAAAA,aAAa,CAACiC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACA,QAAI,CAAChC,eAAL,EAAsB;;AAEtB,QAAI,CAACE,MAAL,EAAa;AACXC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACArB,MAAAA,MAAM,CAAC2C,IAAP,CAAY,QAAZ,EAAsBxC,YAAY,CAACuC,GAAnC;AACD;;AACD,QAAIS,cAAc,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;AACA,QAAIC,WAAW,GAAG,IAAlB;AACAC,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIC,OAAO,GAAG,IAAIJ,IAAJ,GAAWC,OAAX,EAAd;AACA,UAAII,QAAQ,GAAGD,OAAO,GAAGL,cAAzB;;AACA,UAAIM,QAAQ,IAAIH,WAAZ,IAA2BlC,MAA/B,EAAuC;AACrCpB,QAAAA,MAAM,CAAC2C,IAAP,CAAY,aAAZ,EAA2BxC,YAAY,CAACuC,GAAxC;AACArB,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,KAPS,EAOPiC,WAPO,CAAV;AAQH,GAlBD;;AAoBE,QAAMI,WAAW,GAAG,MAAOV,CAAP,IAAa;AAC7BA,IAAAA,CAAC,CAACW,cAAF;AACA3D,IAAAA,MAAM,CAAC2C,IAAP,CAAY,aAAZ,EAA2BxC,YAAY,CAACuC,GAAxC;AACFG,IAAAA,OAAO,CAACC,GAAR,CAAYhC,UAAZ;;AACE,QAAI;AACF,YAAMsB,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,UAASlC,IAAI,CAACmC,KAAM;AAF7B;AADI,OAAf;AAMAxB,MAAAA,aAAa,CAAC,EAAD,CAAb;AACA,YAAM;AAAEyB,QAAAA;AAAF,UAAW,MAAMlD,KAAK,CAACsE,IAAN,CACrB,UADqB,EAErB;AACEC,QAAAA,OAAO,EAAE/C,UADX;AAEEgD,QAAAA,MAAM,EAAE3D;AAFV,OAFqB,EAMrBiC,MANqB,CAAvB;AAQApC,MAAAA,MAAM,CAAC2C,IAAP,CAAY,aAAZ,EAA2BH,IAA3B;AAEA3B,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc4B,IAAd,CAAD,CAAX;AACD,KAnBD,CAmBE,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCF,KAArC;AACH;AACF,GA1BD;;AA2BApD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,GAAGF,EAAE,CAACC,QAAD,CAAX;AACAC,IAAAA,MAAM,CAAC2C,IAAP,CAAY,OAAZ,EAAqBvC,IAArB;AACAJ,IAAAA,MAAM,CAAC+D,EAAP,CAAU,WAAV,EAAuB,MAAM5C,kBAAkB,CAAC,IAAD,CAA/C;AACAnB,IAAAA,MAAM,CAAC+D,EAAP,CAAU,QAAV,EAAoB,MAAMxC,WAAW,CAAC,IAAD,CAArC;AACAvB,IAAAA,MAAM,CAAC+D,EAAP,CAAU,aAAV,EAAyB,MAAMxC,WAAW,CAAC,KAAD,CAA1C,EALc,CAOd;AACD,GARQ,EAQN,EARM,CAAT;AAUA/B,EAAAA,SAAS,CAAC,MAAM;AACd2C,IAAAA,aAAa;AACblC,IAAAA,mBAAmB,GAACE,YAApB;AACD,GAHQ,EAGN,CAACA,YAAD,CAHM,CAAT;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAAC+D,EAAP,CAAU,kBAAV,EAA+BC,kBAAD,IAAwB;AACpDnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,kBAAZ;;AACA,UACE,CAAC/D,mBAAD,IAAwB;AACxBA,MAAAA,mBAAmB,CAACyC,GAApB,KAA4BsB,kBAAkB,CAACC,IAAnB,CAAwBvB,GAFtD,EAIA;AACE,YAAI,CAACpC,YAAY,CAAC4D,QAAb,CAAsBF,kBAAtB,CAAL,EAAgD;AAC9C3D,UAAAA,eAAe,CAAC,CAAC2D,kBAAD,EAAqB,GAAG1D,YAAxB,CAAD,CAAf;AAEAK,UAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AAED;AAEF,OAZD,MAaK;AACHG,QAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcoD,kBAAd,CAAD,CAAX;AACD;AACF,KAlBD;AAmBD,GApBQ,CAAT;AAyBF,sBACA;AAAK,IAAA,SAAS,EAAG,yGAAwG7D,YAAY,GAAC,MAAD,GAAQ,MAAO,GAApJ;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,2FAAf;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,wCAAf;AAAA,gCACI;AAAA,oBAAKA,YAAY,CAACgE;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAE,MAAI3D,cAAc,CAAC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EASKQ,OAAO,gBAAC;AAAK,QAAA,SAAS,EAAC,2DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAD,gBAER;AAAK,QAAA,EAAE,EAAC,UAAR;AAAmB,QAAA,SAAS,EAAC,qEAA7B;AAAA,mBACKJ,QADL,aACKA,QADL,uBACKA,QAAQ,CAAEwD,GAAV,CAAc,CAACC,CAAD,EAAGC,CAAH,kBACZ,QAAC,OAAD;AAAS,UAAA,OAAO,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,CADL,eAII;AAAG,UAAA,GAAG,EAAE7C,GAAR;AAAa,UAAA,SAAS,EAAC,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,EAiBWF,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBvB,eAkBI;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA,+BACI;AAAM,UAAA,QAAQ,EAAEoC,WAAhB;AAA6B,UAAA,SAAS,EAAC,aAAvC;AAAA,kCACI;AAAQ,YAAA,OAAO,EAAEvB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAErB,UAA1B;AAAuC,YAAA,QAAQ,EAAEiC,aAAjD;AAAiE,YAAA,SAAS,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAwB,YAAA,SAAS,EAAC,iCAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AA8BH;;GA5KQ7C,I;;KAAAA,I;AA8KT,eAAeA,IAAf","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useRef, useState } from 'react'\n\nimport Message from './Message'\nimport { ChatState } from '../../ChatProvideContext';\nimport UpdateGroup from './UpdateGroup';\nimport io from \"socket.io-client\";\n\nconst ENDPOINT=\"http://localhost:9000\"\nvar socket,selectedChatCompare\n\nfunction Chat() {\n    const { selectedChat,user,setNotification,notification,\n      setSelectedChat,setGroupButton,groupButton ,fetching,setFetching} = ChatState();\n    const [messages,setMessages]=useState([])\n    const [newMessage,setNewMessage]=useState('')\n    const [loading,setLoading]=useState(false)\n    const [socketConnected, setSocketConnected] = useState(false);\n    const [typing, setTyping] = useState(false);\n    const [isTyping, setIsTyping] = useState(false);\n   \n    \n    const ref = useRef()\n    const scrollToBottom = () => {\n        ref.current?.scrollIntoView({behavior: \"smooth\"})\n        \n      }\n    const scrollToEnd=()=>{\n        var chatList = document.getElementById(\"chatList\");\n        chatList.scrollTop = chatList.offsetHeight;\n      }\n\n    useEffect(() => {\n      scrollToEnd()\n    },[]);\n    \n    useEffect(() => {\n        scrollToBottom();\n        // scrollToEnd();\n\n    },[messages,socketConnected])\n    const fetchMessages = async () => {\n        if (!selectedChat) return;\n    \n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n    \n          setLoading(true);\n    \n          const { data } = await axios.get(\n            `/message/${selectedChat._id}`,\n            config\n          );\n          setMessages(data);\n          setLoading(false);\n    \n          socket.emit(\"join chat\", selectedChat._id);\n        } catch (error) {\n          console.log('failed to load messages',error);\n        }\n      };\n    //   console.log(messages);\n    const typingHandler = (e) => {\n        setNewMessage(e.target.value);\n        if (!socketConnected) return;\n    \n        if (!typing) {\n          setTyping(true);\n          socket.emit(\"typing\", selectedChat._id);\n        }\n        let lastTypingTime = new Date().getTime();\n        var timerLength = 2000;\n        setTimeout(() => {\n          var timeNow = new Date().getTime();\n          var timeDiff = timeNow - lastTypingTime;\n          if (timeDiff >= timerLength && typing) {\n            socket.emit(\"stop typing\", selectedChat._id);\n            setTyping(false);\n          }\n        }, timerLength);\n    }\n     \n      const sendMessage = async (e) => {\n          e.preventDefault();\n          socket.emit(\"stop typing\", selectedChat._id);\n        console.log(newMessage);\n          try {\n            const config = {\n              headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${user.token}`,\n              },\n            };\n            setNewMessage(\"\");\n            const { data } = await axios.post(\n              '/message',\n              {\n                content: newMessage,\n                chatId: selectedChat,\n              },\n              config\n            );\n            socket.emit(\"new message\", data);\n        \n            setMessages([...messages, data]);\n          } catch (error) {\n            console.log('failed to send message',error);\n        }\n      };\n      useEffect(() => {\n        socket = io(ENDPOINT);\n        socket.emit(\"setup\", user);\n        socket.on(\"connected\", () => setSocketConnected(true));\n        socket.on(\"typing\", () => setIsTyping(true));\n        socket.on(\"stop typing\", () => setIsTyping(false));\n    \n        // eslint-disable-next-line\n      }, []);\n\n      useEffect(() => {\n        fetchMessages();\n        selectedChatCompare=selectedChat\n      }, [selectedChat]);\n\n      useEffect(() => {\n        socket.on(\"message recieved\", (newMessageRecieved) => {\n          console.log(newMessageRecieved);\n          if (\n            !selectedChatCompare || // if chat is not selected or doesn't match current chat\n            selectedChatCompare._id !== newMessageRecieved.chat._id\n          ) \n          {\n            if (!notification.includes(newMessageRecieved)) {\n              setNotification([newMessageRecieved, ...notification]);\n              \n              setFetching(!fetching);\n            \n            }\n\n          } \n          else {\n            setMessages([...messages, newMessageRecieved]);\n          }\n        });\n      });\n      \n    \n    \n\n    return (\n    <div className={`  sm:p-5 md:p-7 lg:p-10 h-screen overflow-x-hidden z-30 md:flex-grow w-full max-w-screen-2xl  md:flex ${selectedChat?\"flex\":\"none\"} `}>\n        <div className=\"sm:rounded-3xl w-full z-40 p-3 relative flex flex-col bg-emerald-100 bg-opacity-90 h-full\">\n            <UpdateGroup/>\n            <div className=\" rounded-3xl  px-10 py-5 bg-white flex\">\n                <h1>{selectedChat.chatName}</h1>\n                <div className=\"ml-auto\">\n                    <button onClick={()=>setGroupButton(true)}>hhh</button>    \n                </div>\n            </div>\n\n            {loading?<div className=\"flex-col px-3 flex-1 overflow-x-scroll align-text-bottom \">loading...</div>\n            :\n            <div id=\"chatList\" className=\"flex flex-col px-3 my-1 flex-1 overflow-x-scroll align-text-bottom \">                \n                {messages?.map((m,i)=>\n                   <Message message={m}/>\n                )}\n                <p ref={ref} className=\"relative bottom-0\">k</p>\n            </div>}\n                  {isTyping && <p>nnnn</p>}\n            <div className=\"px-10 w-11/12 mt-2  bottom-10 mt-auto  text-right bg-slate-400\">\n                <form onSubmit={sendMessage} className=\"flex h-full\" >\n                    <button onClick={fetchMessages}>image</button>\n                    <input type='text' value={newMessage}  onChange={typingHandler}  className='w-full  fex flex-grow mx-3  rounded-2xl ' />\n                    <button type='submit'   className='rounded-xl bg-teal-400 p-2 mx-2'>send</button>\n                </form>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}