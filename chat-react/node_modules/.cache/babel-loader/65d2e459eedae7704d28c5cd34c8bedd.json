{"ast":null,"code":"var _jsxFileName = \"/home/aswin/Desktop/Projects/chat-mern/chat-react/src/Components/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignIn() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [signup, setSignup] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const handleSubmit = async () => {\n    console.log(email, password);\n\n    if (!email || !password) {\n      setError('fill all the fields');\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const {\n        data\n      } = await axios.post('/user/login', {\n        email,\n        password\n      }, config);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      navigate('../chats', {\n        replace: true\n      });\n      return data;\n    } catch (err) {\n      console.log(err.response.status);\n      err.response.status === 401 && setError('inavlid email or password');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" m-5 grid gap-8 pt-20 pb-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"my-1 text-pink-900\",\n      children: \"signIn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-600\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-white p-5 \",\n      onClick: handleSubmit,\n      children: \"sigggggn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"2iU3z3EaDgx6BjfkQ3BK6MVaYAQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/aswin/Desktop/Projects/chat-mern/chat-react/src/Components/SignIn.js"],"names":["React","useState","axios","motion","useNavigate","SignIn","email","setEmail","password","setPassword","signup","setSignup","error","setError","navigate","handleSubmit","console","log","config","headers","data","post","localStorage","setItem","JSON","stringify","replace","err","response","status","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport {motion} from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\n\n\n\nfunction SignIn() {\n    \n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n    const [signup, setSignup] = useState(false);\n\tconst [error, setError] = useState(null);\n    const navigate=useNavigate();\n\n\n\n\n    const handleSubmit = async ()=>{\n        console.log(email,password);\n        if (!email || !password) {\n            setError('fill all the fields');\n\n            return\n        }\n        try{\n            const config = {\n                headers: {\n                  \"Content-type\": \"application/json\",\n                },\n              };\n              const {data}=await axios.post('/user/login',{email,password},config)\n              localStorage.setItem(\"userInfo\", JSON.stringify(data));\n              navigate('../chats',{replace:true})\n              return data\n        }\n        catch(err){\n            console.log(err.response.status);\n            err.response.status===401 && setError('inavlid email or password');\n        }\n         \n     }\n    return (\n        <div className=\" m-5 grid gap-8 pt-20 pb-10\">\n\t\t\t<h3 className='my-1 text-pink-900'>signIn</h3>\n\t\t\t{error && <p className=\"text-red-600\">{error}</p>}\n\n            <div className=\"grid\">\n                <label>Email</label>\n                <input type=\"text\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n            </div>\n            \n            <div className='grid'>\n                <label>password</label>\n                <input type=\"text\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\n            </div>    \n            <button className='bg-white p-5 '\n                onClick={handleSubmit}>sigggggn</button>  \n        </div>\n    )\n}\n\nexport default SignIn"]},"metadata":{},"sourceType":"module"}